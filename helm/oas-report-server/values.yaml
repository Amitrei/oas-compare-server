# Default values for oas-report-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
fullnameOverride: oas-report-server
image:
  repository: oas-report-server 
  pullPolicy: Never
  tag: "1.0"

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: 
  a: "b"
podLabels:
  app: oas-report-server

podSecurityContext: 
   fsGroup: 2000

securityContext: 
   capabilities:
     drop:
     - ALL
   readOnlyRootFilesystem: true
   runAsNonRoot: true
   runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true 
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: oas-report-server.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /oas-report-server/v1/health
    port: http
readinessProbe:
  httpGet:
    path: /oas-report-server/v1/health
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}


appConfig: 
  DATABASE_ADDRESS: "my-release-redis-master:6379"

redis:
  enabled: true
  auth:
    password: mypass
  architecture: standalone
  commonConfiguration: |-
    appendonly yes
    save "3600 1"
